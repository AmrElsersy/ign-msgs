package ignition.msgs;
option java_package = "com.ignition.msgs";
option java_outer_classname = "OperationProtos";

import "ignition/msgs/entity_factory.proto";

/// \ingroup ignition.msgs
/// \interface Operation
/// \brief A message containing a single operation, specified by type.
/// The operation data will be contained in another field.
/// It can be used to request that an operation is performed, or to
/// notify it has been performed, for example. For example:
///
/// if (msg.type() == DELETE_ENTITY)
/// {
///   if (msg.has_uri())
///     <perform deletion>
///   else
///     gzwarn << "Message does not contain URI, which is required for deletion operation.\n";
/// }

message Operation
{
  /// \brief Types of operations.
  enum Type
  {
    /// \brief Deleting an entity.
    DELETE_ENTITY = 1;

    /// \brief Inserting an entity.
    INSERT_ENTITY = 2;

    /// \brief Inserting a light.
    INSERT_LIGHT = 3;
  }

  /// \brief Type of operation.
  required Type type = 1;

  /// \brief Unique ID of operation.
  optional uint32 id = 2;

  /// \brief When notifying, this can be used to tell whether it was a success.
  optional bool success = 3;

  /// \brief Optional message about operation.
  optional string msg = 4;

  /// \brief Entity URI in string format, for delete operations for example.
  optional string uri = 5;

  /// \brief Entity factory message, for insert operations.
  optional EntityFactory factory = 6;
}

