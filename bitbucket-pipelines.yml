image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          - apt-get -y install
            cmake build-essential lcov curl mercurial libprotobuf-dev protobuf-compiler libprotoc-dev g++-8 ruby cppcheck
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
          - gcc -v
          - g++ -v
          # Ignition cmake
          - hg clone http://bitbucket.org/ignitionrobotics/ign-cmake -b gz11
          - cd ign-cmake
          - mkdir build
          - cd build
          - cmake .. # -DENABLE_TESTS_COMPILATION=false
          - make -j4 install
          - cd ../..
          # Ignition tools
          - hg clone http://bitbucket.org/ignitionrobotics/ign-tools
          - cd ign-tools
          - mkdir build
          - cd build
          - cmake .. # -DENABLE_TESTS_COMPILATION=false
          - make -j4 install
          - cd ../..
          # Ignition math
          - hg clone http://bitbucket.org/ignitionrobotics/ign-math -b gz11
          - cd ign-math
          - mkdir build
          - cd build
          - cmake .. # -DENABLE_TESTS_COMPILATION=false
          - make -j4 install
          - cd ../..
          # Ignition msgs
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage -DCMAKE_INSTALL_PREFIX=/usr
          - make -j4
          - make test ARGS="-V" CTEST_OUTPUT_ON_FAILURE=1
          - make coverage
          - bash <(curl -s https://codecov.io/bash)
          - make install
          # code_check
          - cd ..
          - sh tools/code_check.sh
